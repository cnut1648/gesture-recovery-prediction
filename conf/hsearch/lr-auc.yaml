# @package _global_

# use 
# mpy main.py +hsearch=CNN3D model=CNN3D data.task_name=AB

defaults:
  - override /hydra/sweeper: optuna


# choose metric which will be optimized by Optuna
tune_metric: "valid/epoch/AUROC"

hydra:
  # here we define Optuna hyperparameter search
  # it optimizes for value returned from function with @hydra.main decorator
  # learn more here: https://hydra.cc/docs/next/plugins/optuna_sweeper
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    storage: null
    study_name: null
    n_jobs: 1

    # 'minimize' or 'maximize' the objective
    direction: maximize

    # number of experiments that will be executed
    n_trials: 100

    # choose Optuna hyperparameter sampler
    # learn more here: https://optuna.readthedocs.io/en/stable/reference/samplers.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 1999
      consider_prior: true
      prior_weight: 1.0
      consider_magic_clip: true
      consider_endpoints: false
      n_startup_trials: 10
      n_ei_candidates: 24
      multivariate: false
      warn_independent_sampling: true

    # define range of hyperparameters
    search_space:
      module.optim.lr:
        type: float
        low: 1E-6
        high: 0.2
        log: true
      module.optim.weight_decay:
        type: float
        low: 1E-6
        high: 1E-2
        log: true
      module.model.emb_dim:
        type: int
        low: 32
        high: 512
      module.model.hidden_dim:
        type: int
        low: 512
        high: 2048
      data.batch_size:
        type: categorical
        choices: [16, 32]
      trainer.accumulate_grad_batches:
        type: categorical
        choices: [1, 2, 4]


